
type User @model @key(fields:["id"]){
  id: ID!,	
  partnerID: ID,	
  userName: String!,	
  primary: Boolean!,	
  registered: Boolean,	
  email: String!,	
  tel: String!,	
  activeDays: Int,
  lastActiveDay: AWSTimestamp,
  journey: String,
  sex: String,
  gender: String,
  preferences: String,
  partnerName: String,
  pushNotificationToken: String,
  timeZoneOffset: Int,
  coupleId: String
}


type FormSubmission @model @key(fields:["userId", "formId"]){
  formId:String!,
  journey: String!,
  createdAt: AWSDateTime!
  params: String,
  refParams: String,
  userId: String!,
}

type formId @model @key(fields:["day", "journey"]){
  day: Int!,
  formId: String,
  p1FormId: String,
  p3FormId: String,
  refFormId: String,
  journey: String!,
  partner:String,
  sameUser: Boolean,
  hformId: String,
  description: String,
}

type formIdByWeek @model {
  week: Int!,
  p1formId: String,
  p2formId: String,
  p3formId: String,
  refformId: String,
  category: String!,
  hformId: String,
  description: String,
  min1: Int,
  min2: Int,
  min3: Int,
  clothes1: Boolean,
  clothes2: Boolean,
  clothes3: Boolean,
}

type registeredEmail @model {
  email: String!
  primary: Boolean
}

type couple @model @key(fields:["id"]){
  id: String!
  partnerAId : String!
  partnerBId : String
}

type treatStatus @model @key (fields:["userId", "formId"]){
  userId: String!
  formId: String!
  status: Int!
  message: String
}

